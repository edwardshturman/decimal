generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  items     Item[]    @relation("UserItems")
  Account   Account[]
}

model Item {
  id              String    @id @default(uuid())
  accessToken     String
  institutionName String // Item will always have an institution connection
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  accounts        Account[] @relation("ItemAccounts")
  userId          String
  user            User      @relation("UserItems", fields: [userId], references: [id])
}

model Account {
  id           String        @id @default(uuid())
  name         String?
  mask         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  itemId       String
  item         Item          @relation("ItemAccounts", fields: [itemId], references: [id])
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[] @relation("AccountTransactions")
}

model Transaction {
  id           String   @id @default(uuid())
  accountId    String
  currencyCode String
  amount       Decimal
  date         DateTime @default(now())
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  pending      Boolean
  account      Account  @relation("AccountTransactions", fields: [accountId], references: [id])
}

model Cursor {
  id          String @id @default(uuid())
  accessToken String @unique
  cursor      String
}
